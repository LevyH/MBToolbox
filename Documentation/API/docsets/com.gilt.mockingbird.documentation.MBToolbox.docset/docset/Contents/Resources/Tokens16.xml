<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/MBMessageDigest.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/MBMessageDigest</TokenIdentifier>
			<Abstract type="html">Provides a mechanism for computing secure one-way hashes from various data
sources.</Abstract>
			<DeclaredIn>MBMessageDigest.h</DeclaredIn>
            
			
			<NodeRef refid="16"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMessageDigest/MD5DataForString:</TokenIdentifier>
			<Abstract type="html">Computes an MD5 hash given an input string.</Abstract>
			<DeclaredIn>MBMessageDigest.h</DeclaredIn>
			
			<Declaration>+ (nonnull NSData *)MD5DataForString:(nonnull NSString *)src</Declaration>
			<Parameters>
				<Parameter>
					<Name>src</Name>
					<Abstract type="html">the string for which the MD5 will be computed</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the MD5 hash, as binary NSData</Abstract></ReturnValue>
			<Anchor>//api/name/MD5DataForString:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMessageDigest/MD5ForString:</TokenIdentifier>
			<Abstract type="html">Computes an MD5 hash given an input string.</Abstract>
			<DeclaredIn>MBMessageDigest.h</DeclaredIn>
			
			<Declaration>+ (nonnull NSString *)MD5ForString:(nonnull NSString *)src</Declaration>
			<Parameters>
				<Parameter>
					<Name>src</Name>
					<Abstract type="html">the string for which the MD5 will be computed</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the MD5 hash, as a lowercase hexadecimal string</Abstract></ReturnValue>
			<Anchor>//api/name/MD5ForString:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMessageDigest/MD5ForData:</TokenIdentifier>
			<Abstract type="html">Computes an MD5 hash from an NSData instance.</Abstract>
			<DeclaredIn>MBMessageDigest.h</DeclaredIn>
			
			<Declaration>+ (nonnull NSString *)MD5ForData:(nonnull NSData *)src</Declaration>
			<Parameters>
				<Parameter>
					<Name>src</Name>
					<Abstract type="html">the data for which the MD5 will be computed</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the MD5 hash, as a lowercase hexadecimal string</Abstract></ReturnValue>
			<Anchor>//api/name/MD5ForData:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMessageDigest/MD5ForBytes:length:</TokenIdentifier>
			<Abstract type="html">Computes an MD5 hash from an array of bytes.</Abstract>
			<DeclaredIn>MBMessageDigest.h</DeclaredIn>
			
			<Declaration>+ (nonnull NSString *)MD5ForBytes:(nonnull const void *)bytes length:(size_t)len</Declaration>
			<Parameters>
				<Parameter>
					<Name>bytes</Name>
					<Abstract type="html">the byte array for which the MD5 will be computed</Abstract>
				</Parameter><Parameter>
					<Name>len</Name>
					<Abstract type="html">the length of the byte array</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the MD5 hash, as a lowercase hexadecimal string</Abstract></ReturnValue>
			<Anchor>//api/name/MD5ForBytes:length:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMessageDigest/MD5ForFileAtPath:error:</TokenIdentifier>
			<Abstract type="html">Computes an MD5 hash for the contents of a file.</Abstract>
			<DeclaredIn>MBMessageDigest.h</DeclaredIn>
			
			<Declaration>+ (nullable NSString *)MD5ForFileAtPath:(nonnull NSString *)path error:(NSErrorPtrPtr)errPtr</Declaration>
			<Parameters>
				<Parameter>
					<Name>path</Name>
					<Abstract type="html">the filesystem path of the file for which the MD5 will
            be computed</Abstract>
				</Parameter><Parameter>
					<Name>errPtr</Name>
					<Abstract type="html">If an error occurs and this parameter is non-nil,
             *errPtr will be updated to point to an NSError instance
            containing further information about the error.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the MD5 hash, as a lowercase hexadecimal string; if an error
            occurs while attempting to read the file, nil
            is returned</Abstract></ReturnValue>
			<Anchor>//api/name/MD5ForFileAtPath:error:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMessageDigest/MD5ForFileAtPath:</TokenIdentifier>
			<Abstract type="html">Computes an MD5 hash for the contents of a file.</Abstract>
			<DeclaredIn>MBMessageDigest.h</DeclaredIn>
			
			<Declaration>+ (nullable NSString *)MD5ForFileAtPath:(nonnull NSString *)path</Declaration>
			<Parameters>
				<Parameter>
					<Name>path</Name>
					<Abstract type="html">the filesystem path of the file for which the MD5 will
            be computed</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the MD5 hash, as a lowercase hexadecimal string; if an error
            occurs while attempting to read the file, nil
            is returned</Abstract></ReturnValue>
			<Anchor>//api/name/MD5ForFileAtPath:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMessageDigest/SHA1DataForString:</TokenIdentifier>
			<Abstract type="html">Computes an SHA-1 hash given an input string.</Abstract>
			<DeclaredIn>MBMessageDigest.h</DeclaredIn>
			
			<Declaration>+ (nonnull NSData *)SHA1DataForString:(nonnull NSString *)src</Declaration>
			<Parameters>
				<Parameter>
					<Name>src</Name>
					<Abstract type="html">the string for which the SHA-1 will be computed</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the SHA-1 hash, as binary NSData</Abstract></ReturnValue>
			<Anchor>//api/name/SHA1DataForString:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMessageDigest/SHA1ForString:</TokenIdentifier>
			<Abstract type="html">Computes an SHA-1 hash given an input string.</Abstract>
			<DeclaredIn>MBMessageDigest.h</DeclaredIn>
			
			<Declaration>+ (nonnull NSString *)SHA1ForString:(nonnull NSString *)src</Declaration>
			<Parameters>
				<Parameter>
					<Name>src</Name>
					<Abstract type="html">the string for which the SHA-1 will be computed</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the SHA-1 hash, as a lowercase hexadecimal string</Abstract></ReturnValue>
			<Anchor>//api/name/SHA1ForString:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMessageDigest/SHA1ForData:</TokenIdentifier>
			<Abstract type="html">Computes an SHA-1 hash from an NSData instance.</Abstract>
			<DeclaredIn>MBMessageDigest.h</DeclaredIn>
			
			<Declaration>+ (nonnull NSString *)SHA1ForData:(nonnull NSData *)src</Declaration>
			<Parameters>
				<Parameter>
					<Name>src</Name>
					<Abstract type="html">the data for which the SHA-1 will be computed</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the SHA-1 hash, as a lowercase hexadecimal string</Abstract></ReturnValue>
			<Anchor>//api/name/SHA1ForData:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMessageDigest/SHA1ForBytes:length:</TokenIdentifier>
			<Abstract type="html">Computes an SHA-1 hash from an array of bytes.</Abstract>
			<DeclaredIn>MBMessageDigest.h</DeclaredIn>
			
			<Declaration>+ (nonnull NSString *)SHA1ForBytes:(nonnull const void *)bytes length:(size_t)len</Declaration>
			<Parameters>
				<Parameter>
					<Name>bytes</Name>
					<Abstract type="html">the byte array for which the SHA-1 will be computed</Abstract>
				</Parameter><Parameter>
					<Name>len</Name>
					<Abstract type="html">the length of the byte array</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the SHA-1 hash, as a lowercase hexadecimal string</Abstract></ReturnValue>
			<Anchor>//api/name/SHA1ForBytes:length:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMessageDigest/SHA1ForFileAtPath:error:</TokenIdentifier>
			<Abstract type="html">Computes an SHA-1 hash for the contents of a file.</Abstract>
			<DeclaredIn>MBMessageDigest.h</DeclaredIn>
			
			<Declaration>+ (nullable NSString *)SHA1ForFileAtPath:(nonnull NSString *)path error:(NSErrorPtrPtr)errPtr</Declaration>
			<Parameters>
				<Parameter>
					<Name>path</Name>
					<Abstract type="html">the filesystem path of the file for which the SHA-1 will
            be computed</Abstract>
				</Parameter><Parameter>
					<Name>errPtr</Name>
					<Abstract type="html">If an error occurs and this parameter is non-nil,
             *errPtr will be updated to point to an NSError instance
            containing further information about the error.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the SHA-1 hash, as a lowercase hexadecimal string; if an error
            occurs while attempting to read the file, nil
            is returned</Abstract></ReturnValue>
			<Anchor>//api/name/SHA1ForFileAtPath:error:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/MBMessageDigest/SHA1ForFileAtPath:</TokenIdentifier>
			<Abstract type="html">Computes an SHA-1 hash for the contents of a file.</Abstract>
			<DeclaredIn>MBMessageDigest.h</DeclaredIn>
			
			<Declaration>+ (nullable NSString *)SHA1ForFileAtPath:(nonnull NSString *)path</Declaration>
			<Parameters>
				<Parameter>
					<Name>path</Name>
					<Abstract type="html">the filesystem path of the file for which the SHA-1 will
            be computed</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">the SHA-1 hash, as a lowercase hexadecimal string; if an error
            occurs while attempting to read the file, nil
            is returned</Abstract></ReturnValue>
			<Anchor>//api/name/SHA1ForFileAtPath:</Anchor>
            <NodeRef refid="16"/>
		</Token>
		
        
        
	</File>
</Tokens>